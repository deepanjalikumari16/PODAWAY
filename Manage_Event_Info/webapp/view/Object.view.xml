<mvc:View controllerName="com.coil.podium.Manage_Event_Info.controller.Object" xmlns="sap.m" xmlns:mvc="sap.ui.core.mvc"
	xmlns:core="sap.ui.core" xmlns:u="sap.ui.unified" xmlns:uxap="sap.uxap" xmlns:l="sap.ui.layout">
	<uxap:ObjectPageLayout id="ObjectPageLayout" showAnchorBar="true" showFooter="true" subSectionLayout="TitleOnLeft"
		binding="{objectView>/oDetails}" busy="{objectView>/busy}" busyIndicatorDelay="0" class="sapUiResponsiveContentPadding">
		<uxap:headerTitle>
			<uxap:ObjectPageHeader objectTitle="{= ${objectView>/sMode} === 'C' ? ${i18n>TtlAddEvent} : ${i18n>TtlEditEvent} }"/>
		</uxap:headerTitle>
		<uxap:sections>
			<uxap:ObjectPageSection title="{i18n>eventInfo}">
				<uxap:subSections>
					<uxap:ObjectPageSubSection>
						<l:Grid width="100%" defaultSpan="XL6 L6 M6 S12">
							<VBox>
								<Label required="true" text="{i18n>colName}"/>
								<Input width="100%" value="{objectView>Name}" maxLength="50"/>
							</VBox>
							<VBox>
								<Label text="{i18n>colUrl}"/>
								<Input width="100%" id="urlInput" value="{objectView>Url}" type="Url" change="onUrlValidate" maxLength="300"/>
							</VBox>
							<VBox>
								<Label required="true" text="{i18n>colStartDate}"/>
								<DatePicker width="100%" id="DP_START" valueFormat="dd MMM yyyy" displayFormat="dd MMM yyyy" value="{objectView>StartDate}"
									change="onStartDateChange"/>
							</VBox>
							<VBox>
								<Label required="true" text="{i18n>colEndDate}"/>
								<DatePicker width="100%" id="DP_END" valueFormat="dd MMM yyyy" displayFormat="dd MMM yyyy" value="{objectView>EndDate}"
									change="onEndDateChange"/>
							</VBox>
							<VBox>
								<Label required="true" text="{i18n>colStartTime}"/>
								<TimePicker width="100%" id="TP_STARTTIME" valueFormat="HH:mm" displayFormat="hh:mm a" change="handleChange" value="{objectView>StartTime}"/>
							</VBox>
							<VBox>
								<Label required="true" text="{i18n>colEndTime}"/>
								<TimePicker width="100%" id="TP_ENDTIME" valueFormat="HH:mm" displayFormat="hh:mm a" change="handleChange" value="{objectView>EndTime}"/>
							</VBox>
						</l:Grid>
					</uxap:ObjectPageSubSection>
				</uxap:subSections>
			</uxap:ObjectPageSection>
			<uxap:ObjectPageSection title="{i18n>addressInfo}">
				<uxap:subSections>
					<uxap:ObjectPageSubSection>
						<l:Grid width="100%" defaultSpan="XL6 L6 M6 S12">
							<VBox>
								<Label text="{i18n>colLocation}"/>
								<TextArea width="100%" value="{objectView>Location}" rows="2" maxLength="200"/>
							</VBox>
							<VBox>
								<Label required="true" text="{i18n>colCoOrdinates}"/>
								<Input width="100%" description="longitude" value="{objectView>Latitude}" showValueHelp="true" valueHelpRequest="onMap"/>
								<Input width="100%" description="latitude" value="{objectView>Longitude}" showValueHelp="true" valueHelpRequest="onMap"/>
							</VBox>
							<VBox>
								<Label required="true" text="{i18n>colCountry}"/>
								<ComboBox width="100%" id="CountryDropdownId" selectedKey="{objectView>CountryId}"
									items="{ path: '/MasterCountrySet' , filters : [ { path : 'IsArchived' , operator : 'EQ' , value1 : false } ], parameters : { expand : 'Timezones' } }"
									change="onCountryChange">
									<core:Item key="{Id}" text="{Country}"/>
								</ComboBox>
							</VBox>
							<VBox>
								<Label text="{i18n>colTimeZone}"/>
								<ComboBox width="100%" id="TimezoneDropdownId" busy="{objectView>/bTimeZonesItemsBusy}" busyIndicatorDelay="0"
									selectedKey="{objectView>TimezoneId}" change="onChangeTimezone"></ComboBox>
							</VBox>
							<VBox>
								<Label text="{i18n>colCity}"/>
								<Input width="100%" value="{objectView>City}" maxLength="30"/>
							</VBox>
						</l:Grid>
					</uxap:ObjectPageSubSection>
				</uxap:subSections>
			</uxap:ObjectPageSection>
			<uxap:ObjectPageSection title="{i18n>aboutUs}">
				<uxap:subSections>
					<uxap:ObjectPageSubSection>
						<l:Grid width="100%" defaultSpan="XL6 L6 M6 S12">
							<VBox>
								<Label required="true" text="{i18n>colTitle}"/>
								<Input width="100%" value="{objectView>Title}" maxLength="200"/>
							</VBox>
							<VBox>
								<Label text="{i18n>colDescription}"/>
								<TextArea width="100%" value="{objectView>Description}" rows="3" maxLength="500"/>
							</VBox>
							<VBox>
								<Label text="{i18n>colHighlights}"/>
								<List id="List" mode="Delete" delete="handleDelete" enableBusyIndicator="true" headerText="{i18n>colHighlights}" growing="true"
									items="{path: 'objectView>Highlights' , filters : [ { path : 'IsArchived' , operator : 'EQ' , value1 : false } ] }">
									<headerToolbar>
										<Toolbar>
											<ToolbarSpacer/>
											<Button press="addHighligt" text="{i18n>btnAdd}"/>
										</Toolbar>
									</headerToolbar>
									<CustomListItem>
										<Input width="100%" value="{objectView>Highlight}" visible="{= ${objectView>/IsArchived} !== true }"/>
									</CustomListItem>
								</List>
							</VBox>
							<VBox>
								<Label text="{i18n>LblUploadImages}" />
								<List delete="onDelete"
										items="{ path : 'objectView>/oImages' , templateShareable:true, filters : [ { path : 'IsArchived' , operator : 'EQ' , value1 : false } ]}"
										noDataText="{i18n>TxtNoFileUpload}" mode="Delete">
										<headerToolbar>
											<Toolbar>
												<ToolbarSpacer/>
												<u:FileUploader maximumFileSize="2" fileAllowed="onUpload" tooltip="Upload your file" buttonOnly="true" buttonText="{i18n>btnAdd}"/>
											</Toolbar>
										</headerToolbar>
										<!--										<StandardListItem title="{objectView>FileName}" icon="{  parts :  [{ path: 'objectView>__metadata' }, { path: 'objectView>Image' } ], formatter : '.formatter.giveImage'      }"
											iconDensityAware="false" iconInset="false"/>-->
										<CustomListItem >
											<FlexBox alignItems="Start" justifyContent="SpaceBetween">
												<HBox>
													<Image height="5rem" width="5rem"
														src="{ parts : [{ path: 'objectView>__metadata' }, { path: 'objectView>Image' } ], formatter : '.formatter.giveImage' }"/>
													<Text class="sapUiTinyMargin" text="{objectView>FileName}"/>
												</HBox>
											</FlexBox>
										</CustomListItem>
									</List>
							</VBox>
							
						</l:Grid>
					</uxap:ObjectPageSubSection>
				</uxap:subSections>
			</uxap:ObjectPageSection>
		</uxap:sections>
		<uxap:footer>
			<Toolbar>
				<ToolbarSpacer/>
				<Button text="{i18n>btnCancel}" press="onCancel"/>
				<Button text="{i18n>btnSave}" type="Emphasized" press="onSave"/>
			</Toolbar>
		</uxap:footer>
	</uxap:ObjectPageLayout>
</mvc:View>